#!/usr/bin/env python

import sys,os,scipy.sparse,argparse,time
import numpy as np

t0 = time.time()

print(sys.argv, file=sys.stderr)

parser = argparse.ArgumentParser()
parser.add_argument("-G", "--graph", help="file (without .X.i and .Y.i)", required=True)
args = parser.parse_args()

def map_int64(fn):
    fn_len = os.path.getsize(fn)
    return np.memmap(fn, dtype=np.int64, shape=(int(fn_len/8)), mode='r')

def map_int32(fn):
    fn_len = os.path.getsize(fn)
    return np.memmap(fn, dtype=np.int32, shape=(int(fn_len/4)), mode='r')


if not os.path.exists(fn + '.X.i.idx'):
    X = map_ints64(fn + '.X.i')
    res = np.cumsum(np.bincount(X))
    res.tofile(fn + '.X.i.idx')


