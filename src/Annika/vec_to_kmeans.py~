#!/usr/bin/env python

import scipy
from scipy import sparse, linalg, special
from sklearn import preprocessing
import numpy as np
from scipy.sparse import load_npz, csr_matrix, save_npz
import os,sys,argparse,time,gc,socket
from sklearn.cluster import KMeans

print('vec_to_kmeans.py: sys.argv = ' + str(sys.argv), file=sys.stderr)

t0 = time.time()

print(str(time.time() - t0) + ' host: %s, SLURM_JOB_ID: %s, SLURM_ARRAY_TASK_ID: %s' % (socket.gethostname(), os.environ.get('SLURM_JOB_ID'), os.environ.get('SLURM_ARRAY_TASK_ID')), file=sys.stderr)
sys.stderr.flush()


parser = argparse.ArgumentParser()
parser.add_argument("-K", "--K", type=int, help="number of clusters", default=5)
# parser.add_argument("-o", "--output", help="output directory", required=True)
# parser.add_argument("-i", "--input", help="input npy prone file from ProNE_finish, or input npz file from ProNE baseline", required=True)
# parser.add_argument("-m", "--map", help="mapping files (from new_shrink_matrix)", required=True)
args = parser.parse_args()

X = np.loadtxt(sys.stdin)
kmeans = KMeans(n_clusters=args.K).fit(X[:,2:])

