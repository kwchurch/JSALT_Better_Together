from mlm.scorers import MLMScorerPT
from mlm.models import get_pretrained
import mxnet as mx, sys, os, orjson
from tqdm import trange
ctxs = [mx.cpu()] 

if __name__ == '__main__':

	model, vocab, tokenizer = get_pretrained(ctxs, 'bert-base-cased')
	tokenizer.max_seq_len = 128
	scorer = MLMScorerPT(model, vocab, tokenizer, ctxs)

	bin_num = int(sys.argv[1])
	batch_size = 5

	bin_samples_dir = 'sampling/bin_samples/'

	abstracts = []

	with open(os.path.join(bin_samples_dir, f'{bin_num:03d}')) as input_sample:
		for line in input_sample:
			dat = orjson.loads(line)
			abstracts.append(dat['abstract'])

			break
			

	print(f'Number of abstracts: {len(abstracts)}')

	bs = 16

	print(abstracts[0])

	for batch in trange(0, len(abstracts), bs):
		x = scorer.score_sentences(abstracts[batch:batch+bs], per_token=True)
		print(x)
		print(len(x[0]))
		print(scorer.score_sentences(abstracts[batch:batch+bs], per_token=False))


	#[-287.8875693217851]

	"""
	First 128 tokens:
	Bin 10 first abstract: THE INVENTION CONCERNS A CENTRIFUGAL AIR VENT MUD EMULSIFIED GAS DRILLING. THE AIR VENT INCLUDES AN ENVELOPE TO 52 THIS ORIFICE 54 INPUT SLUDGE 72 EMULSIFIED DRILLING AND GAS A 56 HOLE OUT OF MUD degassed. A HOLLOW SHAFT 58 MOUNTED SO AS TO TURN POWER IN THE ENVELOPE 52 DOOR AND THERE SEVERAL BLADES 66 ACCELERATION ROTATING MUD TO FORM A WHIRLPOOL AND RUNNING THIS AXIALLY MUD TO PORT OUTPUT 56. THUS THE PHASE liquid-solid, HEAVIER, IS DIRECTED TOWARDS THE WALL 76 INNER ENVELOPE 52, WHILE THE SCATTERED IN MUD GAS If ESCAPE TO TREE 58. SCOPE . oUTGASSING DRILLING SLUDGE
	Total score:[-255.88251347393998]
	[[None, -1.8673217296600342, -2.5967981815338135, -2.082136631011963, -0.45215797424316406, -1.4771422147750854, -0.30996671319007874, -1.3997454643249512, -2.853309392929077, -5.308576583862305, -2.516758441925049, -2.961230754852295, -0.0808805599808693, -2.874612331390381, -5.763396739959717, -3.6024415493011475, -5.423866271972656, -1.9989190101623535, -0.011742283590137959, -0.0001486429391661659, -0.0004632591735571623, -0.00016068121476564556, -0.0031537103932350874, -1.7355531454086304, -0.002519886940717697, -0.009899095632135868, -0.06461791694164276, -0.0002833203470800072, -0.00024911639047786593, -2.932505594799295e-05, -8.153582894010469e-05, -0.0023425775580108166, -0.07805764675140381, -0.029795082286000252, -0.0021033799275755882, -4.684815212385729e-05, -4.5536911784438416e-05, -0.004460148513317108, -3.1640758514404297, -1.7164170742034912, -0.008232705295085907, -0.00043275527423247695, -0.0011051744222640991, -7.30726242181845e-05, -0.0012230543652549386, -0.29775217175483704, -3.4296934604644775, -0.09308621287345886, -0.8150691986083984, -2.7444305419921875, -3.4184069633483887, -0.18996679782867432, -0.8401849269866943, -1.2834138870239258, -1.7331335544586182, -7.428161144256592, -2.1446120738983154, -3.706857919692993, -7.492934226989746, -0.0002559096028562635, -0.003118891501799226, -0.025110024958848953, -5.712986469268799, -2.8109235763549805, -0.664278507232666, -1.1330410242080688, -7.699277400970459, -1.8698967695236206, -3.5863733291625977, -2.148672580718994, -10.302048683166504, -0.6356412172317505, -0.4826441705226898, -8.124163627624512, -11.867775917053223, -0.003011812688782811, -0.00016044282529037446, -0.00011228884250158444, -1.4662635294371285e-05, -4.410646579344757e-05, -0.0034322182182222605, -0.0002449450839776546, -0.00011073929636040702, -3.886147169396281e-05, -0.004041362088173628, -5.090785503387451, -0.01663105934858322, -0.0345723032951355, -5.801633358001709, -8.654848098754883, -0.5981155037879944, -4.026140213012695, -5.619678020477295, -0.1809569150209427, -0.3168736398220062, -4.573112487792969, -0.10782376676797867, -0.0034828262869268656, -0.2795088291168213, -3.321749687194824, -2.7369565963745117, -3.9606735706329346, -0.6149928569793701, -3.259730339050293, -2.246068000793457, -1.006325125694275, -0.07206173986196518, -1.4880475997924805, -4.551840782165527, -4.233489513397217, -0.23961623013019562, -7.234568119049072, -4.474200248718262, -0.007746299263089895, -0.0962783619761467, -2.8987765312194824, -1.827377438545227, -0.8828592896461487, -2.093665599822998, -11.2239990234375, -5.8177642822265625, -0.026741934940218925, -1.658069133758545, -0.13307581841945648, -0.08227888494729996, -0.21266017854213715, -11.075041770935059, None]]

	>>> b = torch.load('log_calculations_final/bert-base-cased/10_log_probs.pt')                                                                                                                                            
	>>> b[0]
	tensor([-1.8673e+00, -2.5968e+00, -2.0821e+00, -4.5216e-01, -1.4771e+00,
			-3.0997e-01, -1.3997e+00, -2.8533e+00, -5.3086e+00, -2.5168e+00,
			-2.9612e+00, -8.0883e-02, -2.8746e+00, -5.7634e+00, -3.6025e+00,
			-5.4239e+00, -1.9989e+00, -1.1744e-02, -1.4878e-04, -4.6312e-04,
			-1.6083e-04, -3.1554e-03, -1.7356e+00, -2.5220e-03, -9.9024e-03,
			-6.4630e-02, -2.8358e-04, -2.4900e-04, -2.9445e-05, -8.1781e-05,
			-2.3457e-03, -7.8061e-02, -2.9809e-02, -2.1047e-03, -4.6970e-05,
			-4.5777e-05, -4.4622e-03, -3.1641e+00, -1.7164e+00, -8.2347e-03,
			-4.3324e-04, -1.1055e-03, -7.2959e-05, -1.2241e-03, -2.9776e-01,
			-3.4297e+00, -9.3095e-02, -8.1507e-01, -2.7445e+00, -3.4184e+00,
			-1.8997e-01, -8.4019e-01, -1.2834e+00, -1.7331e+00, -7.4282e+00,
			-2.1446e+00, -3.7069e+00, -7.4929e+00, -2.5592e-04, -3.1189e-03,
			-2.5113e-02, -5.7130e+00, -2.8109e+00, -6.6429e-01, -1.1331e+00,
			-7.6993e+00, -1.8699e+00, -3.5864e+00, -2.1487e+00, -1.0302e+01,
			-6.3563e-01, -4.8264e-01, -8.1242e+00, -1.1868e+01, -3.0129e-03,
			-1.6059e-04, -1.1254e-04, -1.4544e-05, -4.4347e-05, -3.4343e-03,
			-2.4495e-04, -1.1087e-04, -3.8625e-05, -4.0422e-03, -5.0908e+00,
			-1.6633e-02, -3.4590e-02, -5.8016e+00, -8.6548e+00, -5.9814e-01,
			-4.0262e+00, -5.6197e+00, -1.8097e-01, -3.1688e-01, -4.5731e+00,
			-1.0785e-01, -3.4876e-03, -2.7953e-01, -3.3218e+00, -2.7370e+00,
			-3.9607e+00, -6.1499e-01, -3.2597e+00, -2.2461e+00, -1.0063e+00,
			-7.2070e-02, -1.4881e+00, -4.5519e+00, -4.2335e+00, -2.3962e-01,
			-7.2346e+00, -4.4742e+00, -7.7466e-03, -9.6281e-02, -2.8988e+00,
			-1.8274e+00, -8.8287e-01, -2.0937e+00, -1.1224e+01, -5.8178e+00,
			-2.6741e-02, -1.6581e+00, -1.3309e-01, -8.2284e-02, -2.1266e-01,
			-1.1075e+01])
>>> torch.sum(b[0])
tensor(-255.8832)


	"""
